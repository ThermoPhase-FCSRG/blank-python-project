name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'  # put here the versioning/tag pattern used in the package

jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    env:  # convenient var envs
      PACKAGE_NAME: mypackage  # set the package name here
      SERVER: test.pypi  # change to pypi for a real release
      SERVER_NAME: testpypi  # change to pypi for a real release
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing,
                       # You need to configure your PyPI or TestPyPI beforehand to have
                       # trusted publishing working properly.
                       # See: https://docs.pypi.org/trusted-publishers/adding-a-publisher/
      contents: read  # for checkout step

    steps:
      # For a "real" release, consider this approach. Review PACKAGE_NAME, SERVER, and SERVER_NAME
      # defined in env.

    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0      # so tags/history are available

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install build tool
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build

    - name: Build distributions
      run: |
        rm -rf dist
        python -m build --sdist --wheel --outdir dist

      # For a proper release.
    - name: Publish package distributions to PyPI
      if: ${{ env.SERVER == 'pypi' }}
      uses: pypa/gh-action-pypi-publish@release/v1

      # For tests purpose only.
    - name: Publish package distributions to TestPyPI
      if: ${{ env.SERVER == 'test.pypi' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
