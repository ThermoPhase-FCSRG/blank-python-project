{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to mypackage's Docs","text":"<p>This is the documentation of <code>mypackage</code> generated using mkdocs.org.</p>"},{"location":"#sections","title":"Sections","text":"<ol> <li>API References</li> <li>Background and core concepts</li> <li>Notebooks</li> </ol>"},{"location":"background/","title":"Package Brackground","text":"<p>Just an example of how MathJax can be used through Material for MkDocs theme.</p>"},{"location":"background/#hard-to-understand-maths","title":"Hard to understand maths","text":"<p>This package is based on a really heavy math theory that only 4 individuals in the whole world understand something.</p>"},{"location":"background/#the-core-theory","title":"The core theory","text":"<p>Predictions are based on this really hard equation:</p> \\[\\begin{equation} f(x) = m\\,x + b. \\end{equation}\\] <p>For this pretty hard problem, in our context, frequently \\(m \\gt 0\\) and \\(b \\ne 0\\).</p>"},{"location":"background/#recomendations","title":"Recomendations","text":"<p>If you struggled to understand the concepts presented here, please read Rudin's book on Real Analysis.</p>"},{"location":"notebooks/","title":"Notebooks","text":"<p>This is an example of parent page for the notebooks that are rendered in Tutorials.</p>"},{"location":"notebooks/#available-tutorials","title":"Available Tutorials","text":"<p>As an example of how you can mention the pages generated by ipynb files using mkdocs-autorefs.</p> <ol> <li>A fancy tutorial</li> </ol>"},{"location":"reference/","title":"API references","text":"<p>A brief description of the available functions and classes in <code>mypackage</code> is provided below.</p>"},{"location":"reference/#mypackage.foo","title":"<code>mypackage.foo</code>","text":"<p>A generic module to use as example.</p> <p>This module provides:</p> <ul> <li><code>a_function(x, dim)</code>: a function tailored for a calculation.</li> </ul>"},{"location":"reference/#mypackage.foo.a_function","title":"<code>a_function(x, dim)</code>","text":"<p>Define a generic function.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>float</code> <p>The function's argument array.</p> required <code>dim</code> <code>int</code> <p>Number of dimensions to expand.</p> required <p>Returns:</p> Type Description <code>ndarray</code> <p>The evaluated function at the given input array.</p> Source code in <code>src/mypackage/foo.py</code> <pre><code>def a_function(x: float, dim: int) -&gt; np.ndarray:\n    \"\"\"\n    Define a generic function.\n\n    :param x:\n        The function's argument array.\n\n    :param dim:\n        Number of dimensions to expand.\n\n    :return:\n        The evaluated function at the given input array.\n    \"\"\"\n    f = np.ones(dim) + x\n    return f\n</code></pre>"},{"location":"reference/#mypackage.goo","title":"<code>mypackage.goo</code>","text":"<p>Another dummy module to be use as an example.</p> <p>This module provides:</p> <ul> <li><code>calculate_something_big(x, dim)</code>: a function that performs a nice calculation.</li> </ul>"},{"location":"reference/#mypackage.goo.calculate_something_big","title":"<code>calculate_something_big(x, slope=1.0, y_intercept=0.0)</code>","text":"<p>This function calculates something big.</p> <p>In summary, this function calculates a linear relationship between x and y. This relationship is given as:</p> \\[ y = m x + b, \\] <p>where <code>m</code> is the slope and <code>b</code> is the <code>y_intercept</code>, both are exposed as args to this function.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>float</code> <p>The independent variable.</p> required <code>slope</code> <code>float</code> <p>The slope of the linear function.</p> <code>1.0</code> <code>y_intercept</code> <code>float</code> <p>The value that the linear function intercepts the y-axis.</p> <code>0.0</code> <p>Returns:</p> Type Description <code>float</code> <p>The dependent variable of the linear function (y).</p> Source code in <code>src/mypackage/goo.py</code> <pre><code>def calculate_something_big(x: float, slope: float = 1.0, y_intercept: float = 0.0) -&gt; float:\n    \"\"\"\n    This function calculates something big.\n\n    In summary, this function calculates a linear relationship between x and y.\n    This relationship is given as:\n\n    $$\n    y = m x + b,\n    $$\n\n    where `m` is the slope and `b` is the `y_intercept`, both are exposed as\n    args to this function.\n\n    :param x:\n        The independent variable.\n\n    :param slope:\n        The slope of the linear function.\n\n    :param y_intercept:\n        The value that the linear function intercepts the y-axis.\n\n    :return:\n        The dependent variable of the linear function (y).\n    \"\"\"\n    f = slope * x + y_intercept\n    return f\n</code></pre>"},{"location":"Tutorials/fancy_demonstration/","title":"How to solve a fancy problem","text":"In\u00a0[1]: Copied! <pre>from mypackage import foo, goo\n</pre> from mypackage import foo, goo In\u00a0[2]: Copied! <pre>important_output = foo.a_function(1, 3)\n\nprint(f\"The output is {important_output}\")\n</pre> important_output = foo.a_function(1, 3)  print(f\"The output is {important_output}\") <pre>The output is [2. 2. 2.]\n</pre> In\u00a0[3]: Copied! <pre>hard_solution = goo.calculate_something_big(2, 1, 5)\n\nprint(f\"The Nobel prize worthy solution is {hard_solution}\")\n</pre> hard_solution = goo.calculate_something_big(2, 1, 5)  print(f\"The Nobel prize worthy solution is {hard_solution}\") <pre>The Nobel prize worthy solution is 7\n</pre>"},{"location":"Tutorials/fancy_demonstration/#a-fancy-demonstration","title":"A fancy demonstration\u00b6","text":"<p>This notebook demonstrates how to incorporate ipynb files both as tests and docs. Just imagine that we have a bunch of important and fancy calculations and explanations.</p>"},{"location":"Tutorials/fancy_demonstration/#loading-the-dependencies","title":"Loading the dependencies\u00b6","text":"<p>This is all the packages that we will need to solve the amazing problems considered in this study.</p>"},{"location":"Tutorials/fancy_demonstration/#solving-fancy-problems-with-foo","title":"Solving fancy problems with <code>foo</code>\u00b6","text":"<p>Note that <code>foo</code> is already covered in test files.</p>"},{"location":"Tutorials/fancy_demonstration/#solving-challenging-problems-with-goo","title":"Solving challenging problems with <code>goo</code>\u00b6","text":"<p>The <code>goo</code> module is not covered by usual <code>pytest</code> test files. So, if this notebooks works properly, the cell below should works as a test and the coverage should be extended considering the usage of <code>goo</code> here.</p>"}]}